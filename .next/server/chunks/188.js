"use strict";exports.id=188,exports.ids=[188],exports.modules={6249:(e,n)=>{Object.defineProperty(n,"l",{enumerable:!0,get:function(){return function e(n,o){return o in n?n[o]:"then"in n&&"function"==typeof n.then?n.then(n=>e(n,o)):"function"==typeof n&&"default"===o?n:void 0}}})},5417:(e,n,o)=>{let t;let r=o(661).verbose();function i(){t&&t.close(e=>{e?console.error("Error closing database:",e.message):console.log("Database connection closed.")})}o(1017),process.on("SIGINT",()=>{console.log("\n\uD83D\uDED1 Shutting down gracefully..."),i(),process.exit(0)}),e.exports={initDatabase:function(){if(console.log("\uD83D\uDD0D DATABASE DEBUG INFO:"),console.log("NODE_ENV:","production"),console.log("DATABASE_URL exists:",!!process.env.DATABASE_URL),console.log("DATABASE_URL starts with mongodb:",process.env.DATABASE_URL?.startsWith("mongodb")),process.env.DATABASE_URL&&process.env.DATABASE_URL.startsWith("mongodb")){console.log("\uD83C\uDF43 Using MongoDB for production"),console.log("DATABASE_URL (first 50 chars):",process.env.DATABASE_URL.substring(0,50)+"...");try{let{initDatabase:e}=o(564);return e()}catch(e){throw console.error("❌ Error loading MongoDB module:",e),e}}let e="/tmp/proxy.db";return console.log("\uD83D\uDCC1 Using SQLite database at:",e),(t=new r.Database(e)).serialize(()=>{t.run("ALTER TABLE proxy_links ADD COLUMN group_name TEXT",()=>{}),t.run("ALTER TABLE proxy_links ADD COLUMN max_uses INTEGER DEFAULT 3",()=>{}),t.run("ALTER TABLE proxy_links ADD COLUMN current_uses INTEGER DEFAULT 0",()=>{}),t.run("ALTER TABLE link_usage ADD COLUMN participant_number INTEGER",()=>{}),t.run("ALTER TABLE link_usage ADD COLUMN user_fingerprint TEXT",()=>{}),t.run(`CREATE TABLE IF NOT EXISTS proxy_links (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      proxy_id TEXT UNIQUE NOT NULL,
      real_url TEXT NOT NULL,
      group_name TEXT,
      max_uses INTEGER DEFAULT 3,
      current_uses INTEGER DEFAULT 0,
      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      is_active BOOLEAN DEFAULT 1,
      created_by TEXT DEFAULT 'admin'
    )`),t.run(`CREATE TABLE IF NOT EXISTS link_usage (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      proxy_id TEXT NOT NULL,
      session_id TEXT NOT NULL,
      user_ip TEXT,
      user_fingerprint TEXT,
      participant_number INTEGER,
      used_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      UNIQUE(proxy_id, user_fingerprint)
    )`),t.run(`CREATE TABLE IF NOT EXISTS admins (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      username TEXT UNIQUE NOT NULL,
      password TEXT NOT NULL,
      created_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )`),t.run("INSERT OR IGNORE INTO admins (username, password) VALUES (?, ?)",["admin","admin123"]),console.log("\uD83D\uDCCA Database initialized successfully")}),t},getDatabase:function(){if(console.log("\uD83D\uDD0D getDatabase() called"),console.log("DATABASE_URL exists:",!!process.env.DATABASE_URL),process.env.DATABASE_URL&&process.env.DATABASE_URL.startsWith("mongodb")){console.log("\uD83C\uDF43 Getting MongoDB database");try{let{getDatabase:e}=o(564);return e()}catch(e){throw console.error("❌ Error getting MongoDB database:",e),e}}if(console.log("\uD83D\uDCC1 Using SQLite database"),!t)throw console.error("❌ SQLite database not initialized"),Error("Database not initialized. Call initDatabase() first.");return t},closeDatabase:i}},564:(e,n,o)=>{let{MongoClient:t,ServerApiVersion:r}=o(8013),i=null,s=null;async function a(){try{console.log("\uD83D\uDD0D Connecting to MongoDB..."),await i.connect(),s=i.db("otree_proxy"),console.log("✅ MongoDB client connected"),await i.db("admin").command({ping:1}),console.log("✅ MongoDB connection test successful - Pinged deployment!"),await l()}catch(e){throw console.error("❌ MongoDB connection test failed:",e),e}}async function l(){try{await s.collection("admins").createIndex({username:1},{unique:!0}),await s.collection("proxy_links").createIndex({proxy_id:1},{unique:!0}),await s.collection("link_usage").createIndex({proxy_id:1,user_fingerprint:1},{unique:!0}),console.log("✅ MongoDB indexes created")}catch(e){console.log("ℹ️ MongoDB indexes may already exist:",e.message)}}function u(){return{run:async(e,n=[],o)=>{console.log("\uD83D\uDD0D MongoDB run() called with query type:",c(e));try{let t=await D(e,n);return console.log("✅ MongoDB operation successful"),o&&o(null,{changes:t.modifiedCount||t.insertedCount||1}),t}catch(e){throw console.error("❌ MongoDB run() error:",e.message),o&&o(e),e}},get:async(e,n=[],o)=>{console.log("\uD83D\uDD0D MongoDB get() called with query type:",c(e));try{let t=await D(e,n),r=Array.isArray(t)?t[0]||null:t;return console.log("✅ MongoDB get() successful, found document:",!!r),o&&o(null,r),r}catch(e){throw console.error("❌ MongoDB get() error:",e.message),o&&o(e),e}},all:async(e,n=[],o)=>{console.log("\uD83D\uDD0D MongoDB all() called with query type:",c(e));try{let t=await D(e,n),r=Array.isArray(t)?t:[t].filter(Boolean);return console.log("✅ MongoDB all() successful, found documents:",r.length),o&&o(null,r),r}catch(e){throw console.error("❌ MongoDB all() error:",e.message),o&&o(e),e}},serialize:e=>{e&&e()}}}function c(e){let n=e.toLowerCase().trim();return n.startsWith("select")?"SELECT":n.startsWith("insert")?"INSERT":n.startsWith("update")?"UPDATE":n.startsWith("delete")?"DELETE":"UNKNOWN"}async function D(e,n=[]){s||(console.log("\uD83D\uDD0D Database not connected, connecting..."),await a());let o=c(e);console.log("\uD83D\uDD0D Executing MongoDB operation:",o),console.log("\uD83D\uDD0D Original SQL:",e.substring(0,100)+"..."),console.log("\uD83D\uDD0D Parameters:",n);try{switch(o){case"SELECT":return await d(e,n);case"INSERT":return await g(e,n);case"UPDATE":return await E(e,n);case"DELETE":return await _(e,n);default:throw Error(`Unsupported query type: ${o}`)}}catch(e){throw console.error("❌ MongoDB query execution error:",e),e}}async function d(e,n){if(e.includes("FROM admins WHERE username = ? AND password = ?")){let[e,o]=n;console.log("\uD83D\uDD0D MongoDB: Looking for admin user:",e);let t=await s.collection("admins").findOne({username:e,password:o});return console.log("\uD83D\uDD0D MongoDB: Admin query result:",t?"Found user":"User not found"),t}if(e.includes("FROM admins WHERE username = ?")){let[e]=n;console.log("\uD83D\uDD0D MongoDB: Checking if admin user exists:",e);let o=await s.collection("admins").findOne({username:e});return console.log("\uD83D\uDD0D MongoDB: User existence check result:",o?"User exists":"User not found"),o}if(e.includes("FROM proxy_links ORDER BY created_at DESC")){let e=await s.collection("proxy_links").find({}).sort({created_at:-1}).toArray();console.log("\uD83D\uDD0D Raw MongoDB links:",e);let n=e.map((e,n)=>({id:e._id?e._id.toString():n+1,proxy_id:e.proxy_id,real_url:e.real_url,group_name:e.group_name,max_uses:e.max_uses||3,current_uses:e.current_uses||0,is_active:!1!==e.is_active,created_at:e.created_at instanceof Date?e.created_at.toISOString():e.created_at||new Date().toISOString(),created_by:e.created_by||"admin"}));return console.log("\uD83D\uDD0D Converted links for frontend:",n),n}if(e.includes("FROM proxy_links WHERE proxy_id = ? AND is_active = ?")){let[e,o]=n;console.log("\uD83D\uDD0D MongoDB: Looking for active proxy link:",e);let t=await s.collection("proxy_links").findOne({proxy_id:e,is_active:!0===o||1===o});return console.log("\uD83D\uDD0D MongoDB: Proxy link result:",t?"Found":"Not found"),t}if(e.includes("FROM proxy_links WHERE proxy_id = ?")){let[e]=n;console.log("\uD83D\uDD0D MongoDB: Looking for proxy link:",e);let o=await s.collection("proxy_links").findOne({proxy_id:e});return console.log("\uD83D\uDD0D MongoDB: Proxy link result:",o?"Found":"Not found"),o}if(e.includes("FROM link_usage WHERE proxy_id = ? AND user_fingerprint = ?")){let[e,o]=n;console.log("\uD83D\uDD0D MongoDB: Checking fingerprint usage:",o,"for proxy:",e);let t=await s.collection("link_usage").findOne({proxy_id:e,user_fingerprint:o});return console.log("\uD83D\uDD0D MongoDB: Fingerprint check result:",t?"Already used":"Not used"),t}if(e.includes("COUNT(*) as total")){let e=await s.collection("proxy_links").countDocuments(),n=await s.collection("proxy_links").countDocuments({is_active:{$ne:!1}}),o=await s.collection("proxy_links").find({}).toArray(),t=o.reduce((e,n)=>e+(n.current_uses||0),0),r=o.filter(e=>(e.current_uses||0)>=(e.max_uses||3)).length;return console.log("\uD83D\uDD0D Stats calculated:",{total:e,active:n,participants:t,full:r}),{total:e,active:n,participants:t,full:r}}let o=e.match(/FROM\s+(\w+)/i);if(o){let e=o[1];return await s.collection(e).find({}).toArray()}throw Error("Unsupported SELECT query")}async function g(e,n){if(e.includes("INTO admins")){let[e,o]=n;if(await s.collection("admins").findOne({username:e}))throw console.log("❌ Admin already exists, not creating duplicate"),Error("Admin user already exists");let t={username:e,password:o,created_at:new Date};return await s.collection("admins").insertOne(t)}if(e.includes("INTO proxy_links")){let[e,o,t,r]=n,i={proxy_id:e,real_url:o,group_name:t,max_uses:r||3,current_uses:0,is_active:!0,created_at:new Date,created_by:"admin"};return await s.collection("proxy_links").insertOne(i)}if(e.includes("INTO link_usage")){let e;return console.log("\uD83D\uDD0D MongoDB: Inserting link usage:",n),console.log("\uD83D\uDD0D MongoDB: Link usage document:",e=6===n.length?{proxy_id:n[0],session_id:n[1],user_ip:n[2],user_fingerprint:n[3],participant_number:n[4],used_at:n[5]||new Date}:{proxy_id:n[0],session_id:n[1],user_ip:n[2],user_fingerprint:n[3],participant_number:n[4],used_at:new Date}),await s.collection("link_usage").insertOne(e)}throw Error("Unsupported INSERT query")}async function E(e,n){if(e.includes("SET is_active = ? WHERE proxy_id = ?")){let[e,o]=n;return await s.collection("proxy_links").updateOne({proxy_id:o},{$set:{is_active:!!e}})}if(e.includes("SET current_uses = 0 WHERE proxy_id = ?")){let[e]=n;return await s.collection("proxy_links").updateOne({proxy_id:e},{$set:{current_uses:0}})}if(e.includes("SET current_uses = current_uses + 1")){let e=n[0];return await s.collection("proxy_links").updateOne({proxy_id:e},{$inc:{current_uses:1}})}throw Error("Unsupported UPDATE query")}async function _(e,n){if(e.includes("FROM link_usage WHERE proxy_id = ?")){let[e]=n;return await s.collection("link_usage").deleteMany({proxy_id:e})}if(e.includes("FROM proxy_links WHERE proxy_id = ?")){let[e]=n;return await s.collection("proxy_links").deleteOne({proxy_id:e})}throw Error("Unsupported DELETE query")}e.exports={initDatabase:function(){if(console.log("\uD83D\uDD0D MongoDB initDatabase() called"),!process.env.DATABASE_URL)throw console.error("❌ DATABASE_URL environment variable is required for MongoDB"),Error("DATABASE_URL environment variable is required");console.log("\uD83D\uDD17 DATABASE_URL found, creating MongoDB connection..."),console.log("\uD83D\uDD17 Connection string (first 50 chars):",process.env.DATABASE_URL.substring(0,50)+"...");try{return i=new t(process.env.DATABASE_URL,{serverApi:{version:r.v1,strict:!0,deprecationErrors:!0}}),console.log("\uD83C\uDF43 MongoDB client created"),a(),u()}catch(e){throw console.error("❌ Error creating MongoDB client:",e),e}},getDatabase:function(){if(console.log("\uD83D\uDD0D MongoDB getDatabase() called"),!i)throw console.error("❌ MongoDB client not initialized"),Error("Database not initialized. Call initDatabase() first.");return console.log("✅ MongoDB client exists, returning interface"),u()}}},6427:(e,n,o)=>{let t=o(6113);e.exports={generateProxyId:function(){return t.randomBytes(16).toString("hex")},isValidUrl:function(e){try{return new URL(e),!0}catch(e){return!1}},requireAdmin:function(e,n,o){if(!e.session.adminLoggedIn)return n.status(401).json({error:"Unauthorized - Admin login required"});o()},sanitizeInput:function(e){return"string"!=typeof e?"":e.replace(/[<>&"']/g,e=>({"<":"&lt;",">":"&gt;","&":"&amp;",'"':"&quot;","'":"&#x27;"})[e]).trim().substring(0,500)},formatDate:function(e){try{return new Date(e).toLocaleString()}catch(e){return"Invalid Date"}},getClientIP:function(e){return e.ip||e.connection.remoteAddress||e.socket.remoteAddress||(e.connection.socket?e.connection.socket.remoteAddress:null)||"unknown"},logActivity:function(e,n={}){let o=new Date().toISOString();console.log(`[${o}] ${e}:`,n)}}},7153:(e,n)=>{var o;Object.defineProperty(n,"x",{enumerable:!0,get:function(){return o}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(o||(o={}))},1802:(e,n,o)=>{e.exports=o(145)}};