"use strict";(()=>{var e={};e.id=742,e.ids=[742],e.modules={8013:e=>{e.exports=require("mongodb")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},1926:(e,t,n)=>{n.r(t),n.d(t,{config:()=>_,default:()=>d,routeModule:()=>p});var i={};n.r(i),n.d(i,{default:()=>l});var a=n(1802),r=n(7153),o=n(6249);let{getGroupStatus:s,getWaitingParticipants:u}=n(5410),{connectToDatabase:c}=n(5410);async function l(e,t){if("GET"!==e.method)return t.status(405).json({error:"Method not allowed"});let{id:n}=e.query;try{let e=await c(),i=await e.collection("link_usage").find({proxy_id:n}).toArray(),a=await u(n),r=await s(n);return t.json({proxyId:n,allParticipants:i.map(e=>({participant_number:e.participant_number,status:e.status,joined_at:e.joined_at,redirected_at:e.redirected_at,group_session_id:e.group_session_id,fingerprint:e.user_fingerprint.substring(0,8)+"..."})),waitingCount:a.length,groupStatus:r,timestamp:new Date().toISOString()})}catch(e){return console.error("❌ Debug error:",e),t.status(500).json({error:e.message})}}let d=(0,o.l)(i,"default"),_=(0,o.l)(i,"config"),p=new a.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/proxy/[id]/debug",pathname:"/api/proxy/[id]/debug",bundlePath:"",filename:""},userland:i})},5410:(e,t,n)=>{let{MongoClient:i,ServerApiVersion:a}=n(8013),r=null,o=null,s=!1;async function u(){if(s&&o)return o;if(!process.env.DATABASE_URL)throw Error("DATABASE_URL environment variable is required");try{return console.log("\uD83D\uDD0D Connecting to MongoDB..."),r=new i(process.env.DATABASE_URL,{serverApi:{version:a.v1,strict:!0,deprecationErrors:!0}}),await r.connect(),o=r.db("otree_proxy"),s=!0,await r.db("admin").command({ping:1}),console.log("✅ MongoDB connected successfully"),await c(),o}catch(e){throw console.error("❌ MongoDB connection failed:",e),e}}async function c(){try{await o.collection("admins").createIndex({username:1},{unique:!0}),await o.collection("proxy_links").createIndex({proxy_id:1},{unique:!0}),await o.collection("link_usage").createIndex({proxy_id:1,user_fingerprint:1},{unique:!0}),console.log("✅ MongoDB indexes created")}catch(e){console.log("ℹ️ MongoDB indexes may already exist:",e.message)}}async function l(e){let t=await u();return await t.collection("admins").findOne({username:e})}async function d(e,t){let n=await u();return await n.collection("admins").findOne({username:e,password:t})}async function _(){let e=await u();return await e.collection("admins").find({}).toArray()}async function p(e,t){let n=await u();return await n.collection("admins").insertOne({username:e,password:t,created_at:new Date})}async function y(){let e=await u();return(await e.collection("proxy_links").find({}).sort({created_at:-1}).toArray()).map((e,t)=>({id:e._id?e._id.toString():t+1,proxy_id:e.proxy_id,real_url:e.real_url,group_name:e.group_name,category:e.category||null,treatment_title:e.treatment_title||null,max_uses:e.max_uses||3,current_uses:e.current_uses||0,is_active:!1!==e.is_active,status:e.status||"active",completed_at:e.completed_at,created_at:e.created_at instanceof Date?e.created_at.toISOString():e.created_at||new Date().toISOString(),created_by:e.created_by||"admin"}))}async function g(e){let t=await u();return await t.collection("proxy_links").findOne({proxy_id:e})}async function w(e){let t=await u();return await t.collection("proxy_links").findOne({proxy_id:e,is_active:{$ne:!1}})}async function f(e,t,n,i=3,a=null,r=null){let o=await u();return await o.collection("proxy_links").insertOne({proxy_id:e,real_url:t,group_name:n,category:a,treatment_title:r,max_uses:i,current_uses:0,is_active:!0,created_at:new Date,created_by:"admin"})}async function m(e,t){let n=await u();return await n.collection("proxy_links").updateOne({proxy_id:e},{$set:{is_active:t}})}async function x(e){let t=await u();return await t.collection("proxy_links").updateOne({proxy_id:e},{$inc:{current_uses:1}})}async function A(e){let t=await u();return await t.collection("proxy_links").updateOne({proxy_id:e},{$set:{current_uses:0}}),await t.collection("link_usage").deleteMany({proxy_id:e})}async function b(e){let t=await u();return await t.collection("link_usage").deleteMany({proxy_id:e}),await t.collection("proxy_links").deleteOne({proxy_id:e})}async function D(e,t){let n=await u();return await n.collection("link_usage").findOne({proxy_id:e,user_fingerprint:t})}async function P(e,t,n,i,a){let r=await u();return await r.collection("link_usage").insertOne({proxy_id:e,session_id:t,user_ip:n,user_fingerprint:i,participant_number:a,status:"waiting",group_session_id:null,joined_at:new Date,redirected_at:null,used_at:new Date})}async function h(e){let t=await u();return await t.collection("link_usage").find({proxy_id:e,status:"waiting"}).sort({joined_at:1}).toArray()}async function k(e,t,n,i=null){let a=await u(),r={status:n,..."redirected"===n&&{redirected_at:new Date},...i&&{group_session_id:i}};return await a.collection("link_usage").updateOne({proxy_id:e,user_fingerprint:t},{$set:r})}async function v(e,t){let i=await u(),a=n(6113).randomBytes(16).toString("hex");return await i.collection("link_usage").updateMany({proxy_id:e,user_fingerprint:{$in:t},status:"waiting"},{$set:{group_session_id:a,status:"redirected",redirected_at:new Date}}),await i.collection("proxy_links").updateOne({proxy_id:e},{$set:{status:"used",completed_at:new Date,current_uses:t.length}}),a}async function O(e){let t=await u(),n=await w(e);if(!n)return null;let i=await h(e),a=await t.collection("link_usage").find({proxy_id:e}).toArray(),r=a.filter(e=>"redirected"===e.status),o=a.length,s=o>=n.max_uses,c=r.length>0;return{proxy_id:e,group_name:n.group_name,category:n.category,treatment_title:n.treatment_title,max_uses:n.max_uses,current_waiting:i.length,total_joined:o,is_full:s,has_redirected_group:c,waiting_participants:i.map(e=>({participant_number:e.participant_number,joined_at:e.joined_at,fingerprint:e.user_fingerprint.substring(0,8)+"..."})),redirected_participants:r.map(e=>({participant_number:e.participant_number,redirected_at:e.redirected_at,group_session_id:e.group_session_id})),real_url:n.real_url}}async function S(){let e=await u(),t=await e.collection("proxy_links").find({}).toArray(),n=t.length,i=t.filter(e=>!1!==e.is_active&&"used"!==e.status).length;return{total:n,active:i,participants:t.reduce((e,t)=>e+(t.current_uses||0),0),full:t.filter(e=>(e.current_uses||0)>=(e.max_uses||3)).length,used:t.filter(e=>"used"===e.status).length}}e.exports={connectToDatabase:u,findAdmin:l,findAdminWithPassword:d,getAllAdmins:_,createAdmin:p,getAllProxyLinks:y,getProxyLink:g,getActiveProxyLink:w,createProxyLink:f,updateProxyLinkStatus:m,incrementProxyLinkUsage:x,resetProxyLinkUsage:A,deleteProxyLink:b,checkLinkUsage:D,recordLinkUsage:P,getProxyStats:S,getWaitingParticipants:h,updateParticipantStatus:k,createGroupSession:v,getGroupStatus:O}},7153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},1802:(e,t,n)=>{e.exports=n(145)}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var n=t(t.s=1926);module.exports=n})();