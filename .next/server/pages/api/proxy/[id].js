"use strict";(()=>{var e={};e.id=735,e.ids=[735],e.modules={8013:e=>{e.exports=require("mongodb")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},661:e=>{e.exports=require("sqlite3")},6113:e=>{e.exports=require("crypto")},1017:e=>{e.exports=require("path")},2672:(e,r,t)=>{t.r(r),t.d(r,{config:()=>p,default:()=>l,routeModule:()=>c});var i={};t.r(i),t.d(i,{default:()=>d});var o=t(1802),a=t(7153),s=t(6249);let{getDatabase:n}=t(5417),{logActivity:u}=t(6427);async function d(e,r){let{id:i}=e.query;if("GET"===e.method)try{try{let{initDatabase:e}=t(5417);await e()}catch(e){console.log("ℹ️ Database already initialized or initialization not needed")}let e=n(),o=await e.get("SELECT * FROM proxy_links WHERE proxy_id = ? AND is_active = ?",[i,!0]);if(!o)return r.status(404).json({error:"Link not found or inactive",canAccess:!1});return r.json({exists:!0,groupName:o.group_name,maxUses:o.max_uses,currentUses:o.current_uses,isActive:o.is_active})}catch(e){return console.error("❌ Proxy page error:",e),r.status(500).json({error:"Internal server error"})}return r.status(405).json({error:"Method not allowed"})}let l=(0,s.l)(i,"default"),p=(0,s.l)(i,"config"),c=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/proxy/[id]",pathname:"/api/proxy/[id]",bundlePath:"",filename:""},userland:i})}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=e=>r(r.s=e),i=r.X(0,[188],()=>t(2672));module.exports=i})();