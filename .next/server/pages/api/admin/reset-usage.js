"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/admin/reset-usage";
exports.ids = ["pages/api/admin/reset-usage"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Freset-usage&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cadmin%5Creset-usage.js&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Freset-usage&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cadmin%5Creset-usage.js&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_admin_reset_usage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\admin\\reset-usage.js */ \"(api)/./pages/api/admin/reset-usage.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_admin_reset_usage_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_admin_reset_usage_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/admin/reset-usage\",\n        pathname: \"/api/admin/reset-usage\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_admin_reset_usage_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFkbWluJTJGcmVzZXQtdXNhZ2UmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q2FkbWluJTVDcmVzZXQtdXNhZ2UuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDZ0U7QUFDaEU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDREQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw0REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vdHJlZS1wcm94eS1zZXJ2ZXIvPzI0MjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxhZG1pblxcXFxyZXNldC11c2FnZS5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FkbWluL3Jlc2V0LXVzYWdlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWRtaW4vcmVzZXQtdXNhZ2VcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Freset-usage&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cadmin%5Creset-usage.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Pure Next.js authentication module\n\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst JWT_SECRET = process.env.SESSION_SECRET || \"your-secret-key-change-this\";\nconst JWT_EXPIRY = 24 * 60 * 60 * 1000; // 24 hours\n// Simple JWT implementation\nfunction createToken(payload) {\n    const header = {\n        alg: \"HS256\",\n        typ: \"JWT\"\n    };\n    const now = Date.now();\n    const tokenPayload = {\n        ...payload,\n        iat: now,\n        exp: now + JWT_EXPIRY\n    };\n    const encodedHeader = Buffer.from(JSON.stringify(header)).toString(\"base64url\");\n    const encodedPayload = Buffer.from(JSON.stringify(tokenPayload)).toString(\"base64url\");\n    const signature = crypto.createHmac(\"sha256\", JWT_SECRET).update(`${encodedHeader}.${encodedPayload}`).digest(\"base64url\");\n    return `${encodedHeader}.${encodedPayload}.${signature}`;\n}\nfunction verifyToken(token) {\n    try {\n        if (!token) return null;\n        const [encodedHeader, encodedPayload, signature] = token.split(\".\");\n        // Verify signature\n        const expectedSignature = crypto.createHmac(\"sha256\", JWT_SECRET).update(`${encodedHeader}.${encodedPayload}`).digest(\"base64url\");\n        if (signature !== expectedSignature) {\n            console.log(\"❌ JWT signature verification failed\");\n            return null;\n        }\n        // Decode payload\n        const payload = JSON.parse(Buffer.from(encodedPayload, \"base64url\").toString());\n        // Check expiry\n        if (payload.exp < Date.now()) {\n            console.log(\"❌ JWT token expired\");\n            return null;\n        }\n        console.log(\"✅ JWT token verified:\", payload);\n        return payload;\n    } catch (error) {\n        console.error(\"❌ JWT verification error:\", error);\n        return null;\n    }\n}\nfunction setAuthCookie(res, payload) {\n    console.log(\"\\uD83D\\uDD0D Setting auth cookie for user:\", payload.username);\n    const token = createToken(payload);\n    res.setHeader(\"Set-Cookie\", [\n        `auth-token=${token}; HttpOnly; Path=/; Max-Age=${JWT_EXPIRY / 1000}; SameSite=Lax`\n    ]);\n    console.log(\"✅ Auth cookie set for user:\", payload.username);\n}\nfunction clearAuthCookie(res) {\n    res.setHeader(\"Set-Cookie\", [\n        \"auth-token=; HttpOnly; Path=/; Max-Age=0; SameSite=Lax\"\n    ]);\n    console.log(\"✅ Auth cookie cleared\");\n}\nfunction getTokenFromRequest(req) {\n    // Try to get token from cookies\n    const cookies = req.headers.cookie;\n    if (cookies) {\n        const tokenMatch = cookies.match(/auth-token=([^;]+)/);\n        if (tokenMatch) {\n            return tokenMatch[1];\n        }\n    }\n    return null;\n}\nfunction requireAuth(req) {\n    const token = getTokenFromRequest(req);\n    const user = verifyToken(token);\n    if (!user) {\n        console.log(\"❌ Authentication required\");\n        return null;\n    }\n    console.log(\"✅ User authenticated:\", user.username);\n    return user;\n}\nmodule.exports = {\n    createToken,\n    verifyToken,\n    setAuthCookie,\n    clearAuthCookie,\n    getTokenFromRequest,\n    requireAuth\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3RCO0lBQ0Y7SUFDQSxPQUFPO0FBQ1Q7QUFFQSxTQUFTRSxZQUFZTixHQUFHO0lBQ3RCLE1BQU1iLFFBQVFZLG9CQUFvQkM7SUFDbEMsTUFBTU8sT0FBT3JCLFlBQVlDO0lBRXpCLElBQUksQ0FBQ29CLE1BQU07UUFDVGpCLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE9BQU87SUFDVDtJQUVBRCxRQUFRQyxHQUFHLENBQUMseUJBQXlCZ0IsS0FBS1gsUUFBUTtJQUNsRCxPQUFPVztBQUNUO0FBRUFDLE9BQU9DLE9BQU8sR0FBRztJQUNmNUM7SUFDQXFCO0lBQ0FRO0lBQ0FJO0lBQ0FDO0lBQ0FPO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vdHJlZS1wcm94eS1zZXJ2ZXIvLi9saWIvYXV0aC5qcz8yODdiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFB1cmUgTmV4dC5qcyBhdXRoZW50aWNhdGlvbiBtb2R1bGVcclxuY29uc3QgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XHJcblxyXG5jb25zdCBKV1RfU0VDUkVUID0gcHJvY2Vzcy5lbnYuU0VTU0lPTl9TRUNSRVQgfHwgJ3lvdXItc2VjcmV0LWtleS1jaGFuZ2UtdGhpcyc7XHJcbmNvbnN0IEpXVF9FWFBJUlkgPSAyNCAqIDYwICogNjAgKiAxMDAwOyAvLyAyNCBob3Vyc1xyXG5cclxuLy8gU2ltcGxlIEpXVCBpbXBsZW1lbnRhdGlvblxyXG5mdW5jdGlvbiBjcmVhdGVUb2tlbihwYXlsb2FkKSB7XHJcbiAgY29uc3QgaGVhZGVyID0ge1xyXG4gICAgYWxnOiAnSFMyNTYnLFxyXG4gICAgdHlwOiAnSldUJ1xyXG4gIH07XHJcbiAgXHJcbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcclxuICBjb25zdCB0b2tlblBheWxvYWQgPSB7XHJcbiAgICAuLi5wYXlsb2FkLFxyXG4gICAgaWF0OiBub3csXHJcbiAgICBleHA6IG5vdyArIEpXVF9FWFBJUllcclxuICB9O1xyXG4gIFxyXG4gIGNvbnN0IGVuY29kZWRIZWFkZXIgPSBCdWZmZXIuZnJvbShKU09OLnN0cmluZ2lmeShoZWFkZXIpKS50b1N0cmluZygnYmFzZTY0dXJsJyk7XHJcbiAgY29uc3QgZW5jb2RlZFBheWxvYWQgPSBCdWZmZXIuZnJvbShKU09OLnN0cmluZ2lmeSh0b2tlblBheWxvYWQpKS50b1N0cmluZygnYmFzZTY0dXJsJyk7XHJcbiAgXHJcbiAgY29uc3Qgc2lnbmF0dXJlID0gY3J5cHRvXHJcbiAgICAuY3JlYXRlSG1hYygnc2hhMjU2JywgSldUX1NFQ1JFVClcclxuICAgIC51cGRhdGUoYCR7ZW5jb2RlZEhlYWRlcn0uJHtlbmNvZGVkUGF5bG9hZH1gKVxyXG4gICAgLmRpZ2VzdCgnYmFzZTY0dXJsJyk7XHJcbiAgXHJcbiAgcmV0dXJuIGAke2VuY29kZWRIZWFkZXJ9LiR7ZW5jb2RlZFBheWxvYWR9LiR7c2lnbmF0dXJlfWA7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHZlcmlmeVRva2VuKHRva2VuKSB7XHJcbiAgdHJ5IHtcclxuICAgIGlmICghdG9rZW4pIHJldHVybiBudWxsO1xyXG4gICAgXHJcbiAgICBjb25zdCBbZW5jb2RlZEhlYWRlciwgZW5jb2RlZFBheWxvYWQsIHNpZ25hdHVyZV0gPSB0b2tlbi5zcGxpdCgnLicpO1xyXG4gICAgXHJcbiAgICAvLyBWZXJpZnkgc2lnbmF0dXJlXHJcbiAgICBjb25zdCBleHBlY3RlZFNpZ25hdHVyZSA9IGNyeXB0b1xyXG4gICAgICAuY3JlYXRlSG1hYygnc2hhMjU2JywgSldUX1NFQ1JFVClcclxuICAgICAgLnVwZGF0ZShgJHtlbmNvZGVkSGVhZGVyfS4ke2VuY29kZWRQYXlsb2FkfWApXHJcbiAgICAgIC5kaWdlc3QoJ2Jhc2U2NHVybCcpO1xyXG4gICAgXHJcbiAgICBpZiAoc2lnbmF0dXJlICE9PSBleHBlY3RlZFNpZ25hdHVyZSkge1xyXG4gICAgICBjb25zb2xlLmxvZygn4p2MIEpXVCBzaWduYXR1cmUgdmVyaWZpY2F0aW9uIGZhaWxlZCcpO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gRGVjb2RlIHBheWxvYWRcclxuICAgIGNvbnN0IHBheWxvYWQgPSBKU09OLnBhcnNlKEJ1ZmZlci5mcm9tKGVuY29kZWRQYXlsb2FkLCAnYmFzZTY0dXJsJykudG9TdHJpbmcoKSk7XHJcbiAgICBcclxuICAgIC8vIENoZWNrIGV4cGlyeVxyXG4gICAgaWYgKHBheWxvYWQuZXhwIDwgRGF0ZS5ub3coKSkge1xyXG4gICAgICBjb25zb2xlLmxvZygn4p2MIEpXVCB0b2tlbiBleHBpcmVkJyk7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZygn4pyFIEpXVCB0b2tlbiB2ZXJpZmllZDonLCBwYXlsb2FkKTtcclxuICAgIHJldHVybiBwYXlsb2FkO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCfinYwgSldUIHZlcmlmaWNhdGlvbiBlcnJvcjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNldEF1dGhDb29raWUocmVzLCBwYXlsb2FkKSB7XHJcbiAgY29uc29sZS5sb2coJ/CflI0gU2V0dGluZyBhdXRoIGNvb2tpZSBmb3IgdXNlcjonLCBwYXlsb2FkLnVzZXJuYW1lKTtcclxuICBjb25zdCB0b2tlbiA9IGNyZWF0ZVRva2VuKHBheWxvYWQpO1xyXG4gIFxyXG4gIHJlcy5zZXRIZWFkZXIoJ1NldC1Db29raWUnLCBbXHJcbiAgICBgYXV0aC10b2tlbj0ke3Rva2VufTsgSHR0cE9ubHk7IFBhdGg9LzsgTWF4LUFnZT0ke0pXVF9FWFBJUlkgLyAxMDAwfTsgU2FtZVNpdGU9TGF4YFxyXG4gIF0pO1xyXG4gIFxyXG4gIGNvbnNvbGUubG9nKCfinIUgQXV0aCBjb29raWUgc2V0IGZvciB1c2VyOicsIHBheWxvYWQudXNlcm5hbWUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbGVhckF1dGhDb29raWUocmVzKSB7XHJcbiAgcmVzLnNldEhlYWRlcignU2V0LUNvb2tpZScsIFtcclxuICAgICdhdXRoLXRva2VuPTsgSHR0cE9ubHk7IFBhdGg9LzsgTWF4LUFnZT0wOyBTYW1lU2l0ZT1MYXgnXHJcbiAgXSk7XHJcbiAgY29uc29sZS5sb2coJ+KchSBBdXRoIGNvb2tpZSBjbGVhcmVkJyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFRva2VuRnJvbVJlcXVlc3QocmVxKSB7XHJcbiAgLy8gVHJ5IHRvIGdldCB0b2tlbiBmcm9tIGNvb2tpZXNcclxuICBjb25zdCBjb29raWVzID0gcmVxLmhlYWRlcnMuY29va2llO1xyXG4gIGlmIChjb29raWVzKSB7XHJcbiAgICBjb25zdCB0b2tlbk1hdGNoID0gY29va2llcy5tYXRjaCgvYXV0aC10b2tlbj0oW147XSspLyk7XHJcbiAgICBpZiAodG9rZW5NYXRjaCkge1xyXG4gICAgICByZXR1cm4gdG9rZW5NYXRjaFsxXTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG51bGw7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlcXVpcmVBdXRoKHJlcSkge1xyXG4gIGNvbnN0IHRva2VuID0gZ2V0VG9rZW5Gcm9tUmVxdWVzdChyZXEpO1xyXG4gIGNvbnN0IHVzZXIgPSB2ZXJpZnlUb2tlbih0b2tlbik7XHJcbiAgXHJcbiAgaWYgKCF1c2VyKSB7XHJcbiAgICBjb25zb2xlLmxvZygn4p2MIEF1dGhlbnRpY2F0aW9uIHJlcXVpcmVkJyk7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgXHJcbiAgY29uc29sZS5sb2coJ+KchSBVc2VyIGF1dGhlbnRpY2F0ZWQ6JywgdXNlci51c2VybmFtZSk7XHJcbiAgcmV0dXJuIHVzZXI7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIGNyZWF0ZVRva2VuLFxyXG4gIHZlcmlmeVRva2VuLFxyXG4gIHNldEF1dGhDb29raWUsXHJcbiAgY2xlYXJBdXRoQ29va2llLFxyXG4gIGdldFRva2VuRnJvbVJlcXVlc3QsXHJcbiAgcmVxdWlyZUF1dGhcclxufTsiXSwibmFtZXMiOlsiY3J5cHRvIiwicmVxdWlyZSIsIkpXVF9TRUNSRVQiLCJwcm9jZXNzIiwiZW52IiwiU0VTU0lPTl9TRUNSRVQiLCJKV1RfRVhQSVJZIiwiY3JlYXRlVG9rZW4iLCJwYXlsb2FkIiwiaGVhZGVyIiwiYWxnIiwidHlwIiwibm93IiwiRGF0ZSIsInRva2VuUGF5bG9hZCIsImlhdCIsImV4cCIsImVuY29kZWRIZWFkZXIiLCJCdWZmZXIiLCJmcm9tIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvU3RyaW5nIiwiZW5jb2RlZFBheWxvYWQiLCJzaWduYXR1cmUiLCJjcmVhdGVIbWFjIiwidXBkYXRlIiwiZGlnZXN0IiwidmVyaWZ5VG9rZW4iLCJ0b2tlbiIsInNwbGl0IiwiZXhwZWN0ZWRTaWduYXR1cmUiLCJjb25zb2xlIiwibG9nIiwicGFyc2UiLCJlcnJvciIsInNldEF1dGhDb29raWUiLCJyZXMiLCJ1c2VybmFtZSIsInNldEhlYWRlciIsImNsZWFyQXV0aENvb2tpZSIsImdldFRva2VuRnJvbVJlcXVlc3QiLCJyZXEiLCJjb29raWVzIiwiaGVhZGVycyIsImNvb2tpZSIsInRva2VuTWF0Y2giLCJtYXRjaCIsInJlcXVpcmVBdXRoIiwidXNlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/auth.js\n");

/***/ }),

/***/ "(api)/./lib/database.js":
/*!*************************!*\
  !*** ./lib/database.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Pure Next.js database module (MongoDB only)\n\nconst { MongoClient, ServerApiVersion } = __webpack_require__(/*! mongodb */ \"mongodb\");\nlet client = null;\nlet db = null;\nlet isConnected = false;\nasync function connectToDatabase() {\n    if (isConnected && db) {\n        return db;\n    }\n    if (!process.env.DATABASE_URL) {\n        throw new Error(\"DATABASE_URL environment variable is required\");\n    }\n    try {\n        console.log(\"\\uD83D\\uDD0D Connecting to MongoDB...\");\n        client = new MongoClient(process.env.DATABASE_URL, {\n            serverApi: {\n                version: ServerApiVersion.v1,\n                strict: true,\n                deprecationErrors: true\n            }\n        });\n        await client.connect();\n        db = client.db(\"otree_proxy\");\n        isConnected = true;\n        // Test the connection\n        await client.db(\"admin\").command({\n            ping: 1\n        });\n        console.log(\"✅ MongoDB connected successfully\");\n        // Create indexes\n        await createIndexes();\n        return db;\n    } catch (error) {\n        console.error(\"❌ MongoDB connection failed:\", error);\n        throw error;\n    }\n}\nasync function createIndexes() {\n    try {\n        await db.collection(\"admins\").createIndex({\n            username: 1\n        }, {\n            unique: true\n        });\n        await db.collection(\"proxy_links\").createIndex({\n            proxy_id: 1\n        }, {\n            unique: true\n        });\n        await db.collection(\"link_usage\").createIndex({\n            proxy_id: 1,\n            user_fingerprint: 1\n        }, {\n            unique: true\n        });\n        console.log(\"✅ MongoDB indexes created\");\n    } catch (error) {\n        console.log(\"ℹ️ MongoDB indexes may already exist:\", error.message);\n    }\n}\n// Database operations\nasync function findAdmin(username) {\n    const database = await connectToDatabase();\n    return await database.collection(\"admins\").findOne({\n        username\n    });\n}\nasync function findAdminWithPassword(username, password) {\n    const database = await connectToDatabase();\n    return await database.collection(\"admins\").findOne({\n        username,\n        password\n    });\n}\nasync function getAllAdmins() {\n    const database = await connectToDatabase();\n    return await database.collection(\"admins\").find({}).toArray();\n}\nasync function createAdmin(username, password) {\n    const database = await connectToDatabase();\n    return await database.collection(\"admins\").insertOne({\n        username,\n        password,\n        created_at: new Date()\n    });\n}\nasync function getAllProxyLinks() {\n    const database = await connectToDatabase();\n    const links = await database.collection(\"proxy_links\").find({}).sort({\n        created_at: -1\n    }).toArray();\n    // Convert MongoDB format to frontend-compatible format\n    return links.map((link, index)=>({\n            id: link._id ? link._id.toString() : index + 1,\n            proxy_id: link.proxy_id,\n            real_url: link.real_url,\n            group_name: link.group_name,\n            category: link.category || null,\n            treatment_title: link.treatment_title || null,\n            max_uses: link.max_uses || 3,\n            current_uses: link.current_uses || 0,\n            is_active: link.is_active !== false,\n            status: link.status || \"active\",\n            completed_at: link.completed_at,\n            created_at: link.created_at instanceof Date ? link.created_at.toISOString() : link.created_at || new Date().toISOString(),\n            created_by: link.created_by || \"admin\"\n        }));\n}\nasync function getProxyLink(proxyId) {\n    const database = await connectToDatabase();\n    return await database.collection(\"proxy_links\").findOne({\n        proxy_id: proxyId\n    });\n}\nasync function getActiveProxyLink(proxyId) {\n    const database = await connectToDatabase();\n    return await database.collection(\"proxy_links\").findOne({\n        proxy_id: proxyId,\n        is_active: {\n            $ne: false\n        }\n    });\n}\nasync function createProxyLink(proxyId, realUrl, groupName, maxUses = 3, category = null, treatmentTitle = null) {\n    const database = await connectToDatabase();\n    return await database.collection(\"proxy_links\").insertOne({\n        proxy_id: proxyId,\n        real_url: realUrl,\n        group_name: groupName,\n        category: category,\n        treatment_title: treatmentTitle,\n        max_uses: maxUses,\n        current_uses: 0,\n        is_active: true,\n        created_at: new Date(),\n        created_by: \"admin\"\n    });\n}\nasync function updateProxyLinkStatus(proxyId, isActive) {\n    const database = await connectToDatabase();\n    return await database.collection(\"proxy_links\").updateOne({\n        proxy_id: proxyId\n    }, {\n        $set: {\n            is_active: isActive\n        }\n    });\n}\nasync function incrementProxyLinkUsage(proxyId) {\n    const database = await connectToDatabase();\n    return await database.collection(\"proxy_links\").updateOne({\n        proxy_id: proxyId\n    }, {\n        $inc: {\n            current_uses: 1\n        }\n    });\n}\nasync function resetProxyLinkUsage(proxyId) {\n    const database = await connectToDatabase();\n    await database.collection(\"proxy_links\").updateOne({\n        proxy_id: proxyId\n    }, {\n        $set: {\n            current_uses: 0\n        }\n    });\n    return await database.collection(\"link_usage\").deleteMany({\n        proxy_id: proxyId\n    });\n}\nasync function deleteProxyLink(proxyId) {\n    const database = await connectToDatabase();\n    await database.collection(\"link_usage\").deleteMany({\n        proxy_id: proxyId\n    });\n    return await database.collection(\"proxy_links\").deleteOne({\n        proxy_id: proxyId\n    });\n}\nasync function checkLinkUsage(proxyId, userFingerprint) {\n    const database = await connectToDatabase();\n    return await database.collection(\"link_usage\").findOne({\n        proxy_id: proxyId,\n        user_fingerprint: userFingerprint\n    });\n}\nasync function recordLinkUsage(proxyId, sessionId, userIp, userFingerprint, participantNumber) {\n    const database = await connectToDatabase();\n    return await database.collection(\"link_usage\").insertOne({\n        proxy_id: proxyId,\n        session_id: sessionId,\n        user_ip: userIp,\n        user_fingerprint: userFingerprint,\n        participant_number: participantNumber,\n        status: \"waiting\",\n        group_session_id: null,\n        joined_at: new Date(),\n        redirected_at: null,\n        used_at: new Date()\n    });\n}\n// New functions for group management\nasync function getWaitingParticipants(proxyId) {\n    const database = await connectToDatabase();\n    return await database.collection(\"link_usage\").find({\n        proxy_id: proxyId,\n        status: \"waiting\"\n    }).sort({\n        joined_at: 1\n    }).toArray();\n}\nasync function updateParticipantStatus(proxyId, userFingerprint, status, groupSessionId = null) {\n    const database = await connectToDatabase();\n    const updateData = {\n        status,\n        ...status === \"redirected\" && {\n            redirected_at: new Date()\n        },\n        ...groupSessionId && {\n            group_session_id: groupSessionId\n        }\n    };\n    return await database.collection(\"link_usage\").updateOne({\n        proxy_id: proxyId,\n        user_fingerprint: userFingerprint\n    }, {\n        $set: updateData\n    });\n}\nasync function createGroupSession(proxyId, participantFingerprints) {\n    const database = await connectToDatabase();\n    const groupSessionId = (__webpack_require__(/*! crypto */ \"crypto\").randomBytes)(16).toString(\"hex\");\n    // Update all participants with the group session ID\n    await database.collection(\"link_usage\").updateMany({\n        proxy_id: proxyId,\n        user_fingerprint: {\n            $in: participantFingerprints\n        },\n        status: \"waiting\"\n    }, {\n        $set: {\n            group_session_id: groupSessionId,\n            status: \"redirected\",\n            redirected_at: new Date()\n        }\n    });\n    // Mark the proxy link as used/completed when all participants are redirected\n    await database.collection(\"proxy_links\").updateOne({\n        proxy_id: proxyId\n    }, {\n        $set: {\n            status: \"used\",\n            completed_at: new Date(),\n            current_uses: participantFingerprints.length\n        }\n    });\n    return groupSessionId;\n}\nasync function getGroupStatus(proxyId) {\n    const database = await connectToDatabase();\n    const link = await getActiveProxyLink(proxyId);\n    if (!link) return null;\n    const waitingParticipants = await getWaitingParticipants(proxyId);\n    const allParticipants = await database.collection(\"link_usage\").find({\n        proxy_id: proxyId\n    }).toArray();\n    const redirectedParticipants = allParticipants.filter((p)=>p.status === \"redirected\");\n    const totalJoined = allParticipants.length;\n    const isGroupComplete = totalJoined >= link.max_uses;\n    const hasRedirectedGroup = redirectedParticipants.length > 0;\n    return {\n        proxy_id: proxyId,\n        group_name: link.group_name,\n        category: link.category,\n        treatment_title: link.treatment_title,\n        max_uses: link.max_uses,\n        current_waiting: waitingParticipants.length,\n        total_joined: totalJoined,\n        is_full: isGroupComplete,\n        has_redirected_group: hasRedirectedGroup,\n        waiting_participants: waitingParticipants.map((p)=>({\n                participant_number: p.participant_number,\n                joined_at: p.joined_at,\n                fingerprint: p.user_fingerprint.substring(0, 8) + \"...\" // Partial for privacy\n            })),\n        redirected_participants: redirectedParticipants.map((p)=>({\n                participant_number: p.participant_number,\n                redirected_at: p.redirected_at,\n                group_session_id: p.group_session_id\n            })),\n        real_url: link.real_url\n    };\n}\nasync function getProxyStats() {\n    const database = await connectToDatabase();\n    const links = await database.collection(\"proxy_links\").find({}).toArray();\n    const total = links.length;\n    const active = links.filter((link)=>link.is_active !== false && link.status !== \"used\").length;\n    const participants = links.reduce((sum, link)=>sum + (link.current_uses || 0), 0);\n    const full = links.filter((link)=>(link.current_uses || 0) >= (link.max_uses || 3)).length;\n    const used = links.filter((link)=>link.status === \"used\").length;\n    return {\n        total,\n        active,\n        participants,\n        full,\n        used\n    };\n}\nmodule.exports = {\n    connectToDatabase,\n    findAdmin,\n    findAdminWithPassword,\n    getAllAdmins,\n    createAdmin,\n    getAllProxyLinks,\n    getProxyLink,\n    getActiveProxyLink,\n    createProxyLink,\n    updateProxyLinkStatus,\n    incrementProxyLinkUsage,\n    resetProxyLinkUsage,\n    deleteProxyLink,\n    checkLinkUsage,\n    recordLinkUsage,\n    getProxyStats,\n    // New group management functions\n    getWaitingParticipants,\n    updateParticipantStatus,\n    createGroupSession,\n    getGroupStatus\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/database.js\n");

/***/ }),

/***/ "(api)/./lib/utils-server.js":
/*!*****************************!*\
  !*** ./lib/utils-server.js ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Server-side utility functions for Next.js\n\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction generateProxyId() {\n    return crypto.randomBytes(8).toString(\"hex\");\n}\nfunction isValidUrl(string) {\n    try {\n        const url = new URL(string);\n        return url.protocol === \"http:\" || url.protocol === \"https:\";\n    } catch (_) {\n        return false;\n    }\n}\nfunction sanitizeInput(input) {\n    if (!input || typeof input !== \"string\") return \"\";\n    return input.trim().replace(/[<>]/g, \"\");\n}\nfunction logActivity(action, details = {}) {\n    const timestamp = new Date().toISOString();\n    console.log(`[${timestamp}] ${action}:`, details);\n// In a production app, you might want to store this in the database\n// For now, we'll just log to console\n}\nfunction generateFingerprint() {\n    // Generate a simple browser fingerprint\n    return crypto.randomBytes(16).toString(\"hex\");\n}\nfunction getClientIP(req) {\n    return req.headers[\"x-forwarded-for\"] || req.headers[\"x-real-ip\"] || req.connection?.remoteAddress || \"unknown\";\n}\nmodule.exports = {\n    generateProxyId,\n    isValidUrl,\n    sanitizeInput,\n    logActivity,\n    generateFingerprint,\n    getClientIP\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvdXRpbHMtc2VydmVyLmpzIiwibWFwcGluZ3MiOiJBQUFBLDRDQUE0Qzs7QUFDNUMsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFdkIsU0FBU0M7SUFDUCxPQUFPRixPQUFPRyxXQUFXLENBQUMsR0FBR0MsUUFBUSxDQUFDO0FBQ3hDO0FBRUEsU0FBU0MsV0FBV0MsTUFBTTtJQUN4QixJQUFJO1FBQ0YsTUFBTUMsTUFBTSxJQUFJQyxJQUFJRjtRQUNwQixPQUFPQyxJQUFJRSxRQUFRLEtBQUssV0FBV0YsSUFBSUUsUUFBUSxLQUFLO0lBQ3RELEVBQUUsT0FBT0MsR0FBRztRQUNWLE9BQU87SUFDVDtBQUNGO0FBRUEsU0FBU0MsY0FBY0MsS0FBSztJQUMxQixJQUFJLENBQUNBLFNBQVMsT0FBT0EsVUFBVSxVQUFVLE9BQU87SUFDaEQsT0FBT0EsTUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUMsU0FBUztBQUN2QztBQUVBLFNBQVNDLFlBQVlDLE1BQU0sRUFBRUMsVUFBVSxDQUFDLENBQUM7SUFDdkMsTUFBTUMsWUFBWSxJQUFJQyxPQUFPQyxXQUFXO0lBQ3hDQyxRQUFRQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUVKLFVBQVUsRUFBRSxFQUFFRixPQUFPLENBQUMsQ0FBQyxFQUFFQztBQUV6QyxvRUFBb0U7QUFDcEUscUNBQXFDO0FBQ3ZDO0FBRUEsU0FBU007SUFDUCx3Q0FBd0M7SUFDeEMsT0FBT3ZCLE9BQU9HLFdBQVcsQ0FBQyxJQUFJQyxRQUFRLENBQUM7QUFDekM7QUFFQSxTQUFTb0IsWUFBWUMsR0FBRztJQUN0QixPQUFPQSxJQUFJQyxPQUFPLENBQUMsa0JBQWtCLElBQzlCRCxJQUFJQyxPQUFPLENBQUMsWUFBWSxJQUN4QkQsSUFBSUUsVUFBVSxFQUFFQyxpQkFDaEI7QUFDVDtBQUVBQyxPQUFPQyxPQUFPLEdBQUc7SUFDZjVCO0lBQ0FHO0lBQ0FNO0lBQ0FJO0lBQ0FRO0lBQ0FDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vdHJlZS1wcm94eS1zZXJ2ZXIvLi9saWIvdXRpbHMtc2VydmVyLmpzP2MzNjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2VydmVyLXNpZGUgdXRpbGl0eSBmdW5jdGlvbnMgZm9yIE5leHQuanNcclxuY29uc3QgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZVByb3h5SWQoKSB7XHJcbiAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcyg4KS50b1N0cmluZygnaGV4Jyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGlzVmFsaWRVcmwoc3RyaW5nKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoc3RyaW5nKTtcclxuICAgIHJldHVybiB1cmwucHJvdG9jb2wgPT09ICdodHRwOicgfHwgdXJsLnByb3RvY29sID09PSAnaHR0cHM6JztcclxuICB9IGNhdGNoIChfKSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBzYW5pdGl6ZUlucHV0KGlucHV0KSB7XHJcbiAgaWYgKCFpbnB1dCB8fCB0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnKSByZXR1cm4gJyc7XHJcbiAgcmV0dXJuIGlucHV0LnRyaW0oKS5yZXBsYWNlKC9bPD5dL2csICcnKTtcclxufVxyXG5cclxuZnVuY3Rpb24gbG9nQWN0aXZpdHkoYWN0aW9uLCBkZXRhaWxzID0ge30pIHtcclxuICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XHJcbiAgY29uc29sZS5sb2coYFske3RpbWVzdGFtcH1dICR7YWN0aW9ufTpgLCBkZXRhaWxzKTtcclxuICBcclxuICAvLyBJbiBhIHByb2R1Y3Rpb24gYXBwLCB5b3UgbWlnaHQgd2FudCB0byBzdG9yZSB0aGlzIGluIHRoZSBkYXRhYmFzZVxyXG4gIC8vIEZvciBub3csIHdlJ2xsIGp1c3QgbG9nIHRvIGNvbnNvbGVcclxufVxyXG5cclxuZnVuY3Rpb24gZ2VuZXJhdGVGaW5nZXJwcmludCgpIHtcclxuICAvLyBHZW5lcmF0ZSBhIHNpbXBsZSBicm93c2VyIGZpbmdlcnByaW50XHJcbiAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcygxNikudG9TdHJpbmcoJ2hleCcpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRDbGllbnRJUChyZXEpIHtcclxuICByZXR1cm4gcmVxLmhlYWRlcnNbJ3gtZm9yd2FyZGVkLWZvciddIHx8IFxyXG4gICAgICAgICByZXEuaGVhZGVyc1sneC1yZWFsLWlwJ10gfHwgXHJcbiAgICAgICAgIHJlcS5jb25uZWN0aW9uPy5yZW1vdGVBZGRyZXNzIHx8IFxyXG4gICAgICAgICAndW5rbm93bic7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIGdlbmVyYXRlUHJveHlJZCxcclxuICBpc1ZhbGlkVXJsLFxyXG4gIHNhbml0aXplSW5wdXQsXHJcbiAgbG9nQWN0aXZpdHksXHJcbiAgZ2VuZXJhdGVGaW5nZXJwcmludCxcclxuICBnZXRDbGllbnRJUFxyXG59OyJdLCJuYW1lcyI6WyJjcnlwdG8iLCJyZXF1aXJlIiwiZ2VuZXJhdGVQcm94eUlkIiwicmFuZG9tQnl0ZXMiLCJ0b1N0cmluZyIsImlzVmFsaWRVcmwiLCJzdHJpbmciLCJ1cmwiLCJVUkwiLCJwcm90b2NvbCIsIl8iLCJzYW5pdGl6ZUlucHV0IiwiaW5wdXQiLCJ0cmltIiwicmVwbGFjZSIsImxvZ0FjdGl2aXR5IiwiYWN0aW9uIiwiZGV0YWlscyIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImNvbnNvbGUiLCJsb2ciLCJnZW5lcmF0ZUZpbmdlcnByaW50IiwiZ2V0Q2xpZW50SVAiLCJyZXEiLCJoZWFkZXJzIiwiY29ubmVjdGlvbiIsInJlbW90ZUFkZHJlc3MiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/utils-server.js\n");

/***/ }),

/***/ "(api)/./pages/api/admin/reset-usage.js":
/*!****************************************!*\
  !*** ./pages/api/admin/reset-usage.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// Reset link usage API route for Next.js\nconst { resetProxyLinkUsage } = __webpack_require__(/*! ../../../lib/database */ \"(api)/./lib/database.js\");\nconst { requireAuth } = __webpack_require__(/*! ../../../lib/auth */ \"(api)/./lib/auth.js\");\nconst { logActivity } = __webpack_require__(/*! ../../../lib/utils-server */ \"(api)/./lib/utils-server.js\");\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    // Check authentication\n    const user = requireAuth(req);\n    if (!user) {\n        return res.status(401).json({\n            error: \"Unauthorized - Admin login required\"\n        });\n    }\n    const { proxyId } = req.body;\n    if (!proxyId) {\n        return res.status(400).json({\n            error: \"Proxy ID is required\"\n        });\n    }\n    try {\n        await resetProxyLinkUsage(proxyId);\n        logActivity(\"Link usage reset\", {\n            proxyId,\n            admin: user.username\n        });\n        res.json({\n            success: true\n        });\n    } catch (err) {\n        logActivity(\"Reset usage error\", {\n            error: err.message,\n            proxyId\n        });\n        return res.status(500).json({\n            error: \"Database error\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvYWRtaW4vcmVzZXQtdXNhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHlDQUF5QztBQUN6QyxNQUFNLEVBQUVBLG1CQUFtQixFQUFFLEdBQUdDLG1CQUFPQSxDQUFDO0FBQ3hDLE1BQU0sRUFBRUMsV0FBVyxFQUFFLEdBQUdELG1CQUFPQSxDQUFDO0FBQ2hDLE1BQU0sRUFBRUUsV0FBVyxFQUFFLEdBQUdGLG1CQUFPQSxDQUFDO0FBRWpCLGVBQWVHLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUM1QyxJQUFJRCxJQUFJRSxNQUFNLEtBQUssUUFBUTtRQUN6QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBcUI7SUFDNUQ7SUFFQSx1QkFBdUI7SUFDdkIsTUFBTUMsT0FBT1QsWUFBWUc7SUFDekIsSUFBSSxDQUFDTSxNQUFNO1FBQ1QsT0FBT0wsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQXNDO0lBQzdFO0lBRUEsTUFBTSxFQUFFRSxPQUFPLEVBQUUsR0FBR1AsSUFBSVEsSUFBSTtJQUU1QixJQUFJLENBQUNELFNBQVM7UUFDWixPQUFPTixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBdUI7SUFDOUQ7SUFFQSxJQUFJO1FBQ0YsTUFBTVYsb0JBQW9CWTtRQUUxQlQsWUFBWSxvQkFBb0I7WUFDOUJTO1lBQ0FFLE9BQU9ILEtBQUtJLFFBQVE7UUFDdEI7UUFFQVQsSUFBSUcsSUFBSSxDQUFDO1lBQUVPLFNBQVM7UUFBSztJQUUzQixFQUFFLE9BQU9DLEtBQUs7UUFDWmQsWUFBWSxxQkFBcUI7WUFBRU8sT0FBT08sSUFBSUMsT0FBTztZQUFFTjtRQUFRO1FBQy9ELE9BQU9OLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUFpQjtJQUN4RDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3RyZWUtcHJveHktc2VydmVyLy4vcGFnZXMvYXBpL2FkbWluL3Jlc2V0LXVzYWdlLmpzPzkwMzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUmVzZXQgbGluayB1c2FnZSBBUEkgcm91dGUgZm9yIE5leHQuanNcclxuY29uc3QgeyByZXNldFByb3h5TGlua1VzYWdlIH0gPSByZXF1aXJlKCcuLi8uLi8uLi9saWIvZGF0YWJhc2UnKTtcclxuY29uc3QgeyByZXF1aXJlQXV0aCB9ID0gcmVxdWlyZSgnLi4vLi4vLi4vbGliL2F1dGgnKTtcclxuY29uc3QgeyBsb2dBY3Rpdml0eSB9ID0gcmVxdWlyZSgnLi4vLi4vLi4vbGliL3V0aWxzLXNlcnZlcicpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG4gIGlmIChyZXEubWV0aG9kICE9PSAnUE9TVCcpIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcclxuICB9XHJcblxyXG4gIC8vIENoZWNrIGF1dGhlbnRpY2F0aW9uXHJcbiAgY29uc3QgdXNlciA9IHJlcXVpcmVBdXRoKHJlcSk7XHJcbiAgaWYgKCF1c2VyKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogJ1VuYXV0aG9yaXplZCAtIEFkbWluIGxvZ2luIHJlcXVpcmVkJyB9KTtcclxuICB9XHJcblxyXG4gIGNvbnN0IHsgcHJveHlJZCB9ID0gcmVxLmJvZHk7XHJcbiAgXHJcbiAgaWYgKCFwcm94eUlkKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ1Byb3h5IElEIGlzIHJlcXVpcmVkJyB9KTtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCByZXNldFByb3h5TGlua1VzYWdlKHByb3h5SWQpO1xyXG4gICAgXHJcbiAgICBsb2dBY3Rpdml0eSgnTGluayB1c2FnZSByZXNldCcsIHsgXHJcbiAgICAgIHByb3h5SWQsIFxyXG4gICAgICBhZG1pbjogdXNlci51c2VybmFtZSBcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUgfSk7XHJcbiAgICBcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGxvZ0FjdGl2aXR5KCdSZXNldCB1c2FnZSBlcnJvcicsIHsgZXJyb3I6IGVyci5tZXNzYWdlLCBwcm94eUlkIH0pO1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdEYXRhYmFzZSBlcnJvcicgfSk7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbInJlc2V0UHJveHlMaW5rVXNhZ2UiLCJyZXF1aXJlIiwicmVxdWlyZUF1dGgiLCJsb2dBY3Rpdml0eSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJ1c2VyIiwicHJveHlJZCIsImJvZHkiLCJhZG1pbiIsInVzZXJuYW1lIiwic3VjY2VzcyIsImVyciIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/admin/reset-usage.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Freset-usage&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cadmin%5Creset-usage.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();